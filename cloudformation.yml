Parameters:
  VpcId:
    Type: String
    Description: The ID of the existing VPC where the resources will be created.
    Default: vpc-0a531099b7c080858
  StackName:
    Type: String
    Description: A unique name for the CloudFormation stack.
  TagKey:
    Type: String
    Default: ProjectName
  TagValue:
    Type: String
    Default: ECL

Resources:
  ElasticBeanstalkApplication:
    Type: AWS::ElasticBeanstalk::Application
    Properties:
      ApplicationName: MyElasticBeanstalkApp
  
  WebAppVersion:
    Type: AWS::ElasticBeanstalk::ApplicationVersion
    Properties: 
      ApplicationName: !Ref ElasticBeanstalkApplication
      SourceBundle:
        S3Bucket: ecl-webapp-bucket-v1
        S3Key: webapp.zip

  ElasticBeanstalkEnvironment:
    Type: AWS::ElasticBeanstalk::Environment
    Properties:
      ApplicationName: !Ref ElasticBeanstalkApplication
      EnvironmentName: MyElasticBeanstalkEnv
      SolutionStackName: "64bit Amazon Linux 2018.03 v2.9.15 running Python 3.4"
      OptionSettings:
        - Namespace: aws:elasticbeanstalk:environment
          OptionName: EnvironmentType
          Value: LoadBalanced
        - Namespace: aws:autoscaling:launchconfiguration
          OptionName: EC2KeyName
          Value: !Ref EC2KeyPair
        - Namespace: aws:autoscaling:launchconfiguration
          OptionName: IamInstanceProfile
          Value: aws-elasticbeanstalk-ec2-role
        - Namespace: aws:autoscaling:asg
          OptionName: MinSize
          Value: '2'
        - Namespace: aws:autoscaling:asg
          OptionName: MaxSize
          Value: '4'
      Tags:
        - Key: !Ref TagKey
          Value: !Ref TagValue

  ElasticLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: MyELB
      Subnets:
        - subnet-0d25909cbbc4309ba
        - subnet-06aea2c2e22196a27
      SecurityGroups:
        - sg-0843c437d4b3a8734
      Scheme: internet-facing
      Type: application
      IpAddressType: ipv4
      LoadBalancerAttributes:
        - Key: idle_timeout.timeout_seconds
          Value: '60'
      Tags:
        - Key: !Ref TagKey
          Value: !Ref TagValue

  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: MyTargetGroup
      Protocol: HTTP
      Port: 80
      VpcId: !Ref VpcId
      HealthCheckProtocol: HTTP
      HealthCheckPort: "80"
      HealthCheckPath: "/"
      HealthCheckIntervalSeconds: 30
      HealthCheckTimeoutSeconds: 10
      HealthyThresholdCount: 3
      UnhealthyThresholdCount: 3
      TargetType: ip
      Tags:
        - Key: !Ref TagKey
          Value: !Ref TagValue

  LoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup
      LoadBalancerArn: !Ref ElasticLoadBalancer
      Port: 80
      Protocol: HTTP

  EC2KeyPair:
    Type: AWS::EC2::KeyPair
    Properties:
      KeyName: MyEC2Key
      Tags:
        - Key: !Ref TagKey
          Value: !Ref TagValue

  WebAppSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for the Web App EC2 instances
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: !Ref TagKey
          Value: !Ref TagValue
